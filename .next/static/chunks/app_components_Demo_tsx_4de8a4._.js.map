{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/udochiokeke/Documents/GitHub/romancequiz.github.io/romance-vs-crypto/app/components/Demo.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function Demo() {\n  const [quizData, setQuizData] = useState(null);\n\n  useEffect(() => {\n    // Because Next.js runs code on both server and client, we can fetch from public folder\n    fetch('/quiz.json')\n      .then((res) => res.json())\n      .then((data) => {\n        setQuizData(data);\n      })\n      .catch((err) => console.error('Failed to load quiz:', err));\n  }, []);\n\n  if (!quizData) {\n    return <p>Loading quiz...</p>;\n  }\n\n  return (\n    <div style={styles.container}>\n      <h1>Romance vs HODL Quiz</h1>\n      <p>{quizData.shortDescription}</p>\n      <div>\n        {quizData.questions.map((q, idx) => (\n          <div key={idx} style={styles.questionBlock}>\n            <h3 style={styles.questionTitle}>\n              {idx + 1}. {q.question}\n            </h3>\n            <ul style={styles.answersList}>\n              {q.answers.map((ans, ansIdx) => (\n                <li key={ansIdx} style={styles.answerItem}>\n                  {ans}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Some inline styles for simplicity; adjust or remove as you wish\nconst styles = {\n  container: {\n    fontFamily: 'sans-serif',\n    maxWidth: '600px',\n    margin: '0 auto',\n    padding: '1rem',\n  },\n  questionBlock: {\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    padding: '1rem',\n    margin: '1rem 0',\n  },\n  questionTitle: {\n    margin: 0,\n    marginBottom: '0.5rem',\n    fontSize: '1.1rem',\n  },\n  answersList: {\n    listStyle: 'none',\n    paddingLeft: 0,\n  },\n  answerItem: {\n    margin: '0.2rem 0',\n  },\n};"],"names":[],"mappings":";;;;AAAA;;;;AAEe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,uFAAuF;YACvF,MAAM,cACH,IAAI;kCAAC,CAAC,MAAQ,IAAI,IAAI;iCACtB,IAAI;kCAAC,CAAC;oBACL,YAAY;gBACd;iCACC,KAAK;kCAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,wBAAwB;;QAC1D;yBAAG,EAAE;IAEL,IAAI,CAAC,UAAU;QACb,qBAAO,6LAAC;sBAAE;;;;;;IACZ;IAEA,qBACE,6LAAC;QAAI,OAAO,OAAO,SAAS;;0BAC1B,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BAAG,SAAS,gBAAgB;;;;;;0BAC7B,6LAAC;0BACE,SAAS,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,oBAC1B,6LAAC;wBAAc,OAAO,OAAO,aAAa;;0CACxC,6LAAC;gCAAG,OAAO,OAAO,aAAa;;oCAC5B,MAAM;oCAAE;oCAAG,EAAE,QAAQ;;;;;;;0CAExB,6LAAC;gCAAG,OAAO,OAAO,WAAW;0CAC1B,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,uBACnB,6LAAC;wCAAgB,OAAO,OAAO,UAAU;kDACtC;uCADM;;;;;;;;;;;uBANL;;;;;;;;;;;;;;;;AAgBpB;GAvCwB;KAAA;AAyCxB,kEAAkE;AAClE,MAAM,SAAS;IACb,WAAW;QACT,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,SAAS;IACX;IACA,eAAe;QACb,QAAQ;QACR,cAAc;QACd,SAAS;QACT,QAAQ;IACV;IACA,eAAe;QACb,QAAQ;QACR,cAAc;QACd,UAAU;IACZ;IACA,aAAa;QACX,WAAW;QACX,aAAa;IACf;IACA,YAAY;QACV,QAAQ;IACV;AACF"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}